# ===============================
# SERVER CONFIGURATION: Specifies the port for the server to listen on
# ===============================
# Port 8080 is the default port for Spring Boot applications, 
# Tomcat servers are utilized which are pre-configured for 
# HTTPS requests on port 8080
server.port=8080

# ===============================
# H2 DATABASE CONFIGURATION: Specifies the URL, driver class name, username, and password for the H2 database
# ===============================
# In-memory database (data resets on restart)
spring.datasource.url=jdbc:h2:mem:incidentdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (for debugging)
# H2 Console is a web-based database management tool that allows 
# you to inspect and manipulate the H2 database.
# H2 console enabled at http://localhost:8080/h2-console to view the database
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================
# JPA / HIBERNATE CONFIGURATION
# ===============================
# Auto-create tables from entities
# create-drop: Creates tables on startup from @Entity classes, and drops them on shutdown
spring.jpa.hibernate.ddl-auto=create-drop
# show-sql=true: Prints necessary SQL statements to the console for debugging
# format_sql=true: Formats the SQL statements for better readability
# dialect=org.hibernate.dialect.H2Dialect: Specifies the SQL dialect for the H2 database
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# ===============================
# SPRINGDOC / SWAGGER CONFIGURATION: Provides API documentation and Swagger UI
# ===============================
# springdoc.api-docs.path: Specifies the path for the API documentation @http://localhost:8080/api-docs
# springdoc.swagger-ui.path: Specifies the path for the Swagger UI @http://localhost:8080/swagger-ui.html to view the API documentation
# springdoc.swagger-ui.operationsSorter: Sorts the operations by method to organize the API documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method: Sorts the operations by method to organize the API documentation

# ===============================
# LOGGING CONFIGURATION: Provides detailed logs for code @com.incidentresponse=DEBUG: Provides detailed logs for the com.incidentresponse package
# ===============================
# root: INFO level logging for all packages to provide general information about the application
# com.incidentresponse: DEBUG level logging for the com.incidentresponse package to provide detailed logs for the com.incidentresponse package
# org.springframework.web: INFO level logging for the org.springframework.web package to provide information about the Spring Web package
# org.hibernate.SQL: DEBUG level logging for the org.hibernate.SQL package to provide detailed logs for the SQL statements
# org.hibernate.type.descriptor.sql.BasicBinder: TRACE level logging for the org.hibernate.type.descriptor.sql.BasicBinder package to provide detailed logs for the SQL statements
logging.level.root=INFO
logging.level.com.incidentresponse=DEBUG: Provides detailed logs for the com.incidentresponse package
logging.level.org.springframework.web=INFO: Provides information about the Spring Web package
logging.level.org.hibernate.SQL=DEBUG: Provides detailed logs for the SQL statements
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE: Provides detailed logs for the SQL statements

# ===============================
# APPLICATION METADATA: Specifies the name of the application
# ===============================
spring.application.name=incident-coordinator